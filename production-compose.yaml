version: "3.8"

# Coolify-optimized Docker Compose for Reactive Resume with Service Authentication
# This configuration is designed for deployment with Coolify

services:
  # Main Application
  reactive-resume:
    image: 'amruthpillai/reactive-resume:latest'
    restart: unless-stopped
    depends_on:
      - postgres
      - minio
      - chrome
      - redis
    environment:
      # -- Core Configuration --
      PORT: 3000
      NODE_ENV: production
      
      # -- URLs --
      PUBLIC_URL: ${SERVICE_FQDN_REACTIVERESUME}
      STORAGE_URL: ${SERVICE_FQDN_MINIO}/default
      
      # -- Database --
      DATABASE_URL: postgresql://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@postgres:5432/${POSTGRES_DB:-postgres}
      
      # -- Authentication Secrets --
      ACCESS_TOKEN_SECRET: ${SERVICE_PASSWORD_ACCESSTOKEN}
      REFRESH_TOKEN_SECRET: ${SERVICE_PASSWORD_REFRESHTOKEN}
      
      # -- Service Authentication (New Feature) --
      SERVICE_JWT_SECRET: ${SERVICE_JWT_SECRET}
      ALLOWED_SERVICE_PROVIDERS: ${ALLOWED_SERVICE_PROVIDERS:-my-app,external-service}
      
      # -- Browser/Printing --
      CHROME_TOKEN: ${SERVICE_PASSWORD_CHROMETOKEN}
      CHROME_URL: ws://chrome:3000
      
      # -- Redis Cache --
      REDIS_URL: redis://redis:6379
      
      # -- Storage (MinIO) --
      STORAGE_ENDPOINT: minio
      STORAGE_PORT: 9000
      STORAGE_REGION: us-east-1
      STORAGE_BUCKET: default
      STORAGE_ACCESS_KEY: ${SERVICE_USER_MINIO}
      STORAGE_SECRET_KEY: ${SERVICE_PASSWORD_MINIO}
      STORAGE_USE_SSL: false
      STORAGE_SKIP_BUCKET_CHECK: false
      
      # -- Email Configuration --
      MAIL_FROM: ${MAIL_FROM:-noreply@yourdomain.com}
      SMTP_URL: ${SMTP_URL}
      
      # -- Feature Flags --
      DISABLE_SIGNUPS: ${SERVICE_DISABLE_SIGNUPS:-false}
      DISABLE_EMAIL_AUTH: ${SERVICE_DISABLE_EMAIL_AUTH:-false}
      
      # -- OAuth Providers (Optional) --
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      GITHUB_CALLBACK_URL: ${SERVICE_FQDN_REACTIVERESUME}/api/auth/github/callback
      
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_CALLBACK_URL: ${SERVICE_FQDN_REACTIVERESUME}/api/auth/google/callback
      
      # -- Monitoring --
      SENTRY_DSN: ${SENTRY_DSN}

  # Database
  postgres:
    image: 'postgres:16-alpine'
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${SERVICE_USER_POSTGRES}
      POSTGRES_PASSWORD: ${SERVICE_PASSWORD_POSTGRES}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SERVICE_USER_POSTGRES} -d ${POSTGRES_DB:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Object Storage
  minio:
    image: 'quay.io/minio/minio:latest'
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_SERVER_URL: ${MINIO_SERVER_URL}
      MINIO_BROWSER_REDIRECT_URL: ${MINIO_BROWSER_REDIRECT_URL}
      MINIO_ROOT_USER: ${SERVICE_USER_MINIO}
      MINIO_ROOT_PASSWORD: ${SERVICE_PASSWORD_MINIO}
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Browser for PDF Generation
  chrome:
    image: 'ghcr.io/browserless/chromium:latest'
    restart: unless-stopped
    platform: linux/amd64
    environment:
      HEALTH: "true"
      TIMEOUT: 30000
      CONCURRENT: 10
      TOKEN: ${SERVICE_PASSWORD_CHROMETOKEN}
      CHROME_REFRESH_TIME: 2147483647
      DEFAULT_BLOCK_ADS: "true"
      DEFAULT_IGNORE_HTTPS_ERRORS: "true"
      DEFAULT_IGNORE_DEFAULT_ARGS: "true"

  # Redis Cache
  redis:
    image: 'redis:7-alpine'
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres-data:
  minio-data:
  redis-data:
