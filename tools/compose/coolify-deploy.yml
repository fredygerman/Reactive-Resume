version: "3.8"

networks:
  app_network:
    driver: bridge

services:
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: $SERVICE_USER_POSTGRES
      POSTGRES_PASSWORD: $SERVICE_PASSWORD_POSTGRES
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 20s
      retries: 10

  minio:
    image: quay.io/minio/minio:latest
    restart: unless-stopped
    command: server /data --console-address ":9001"
    expose:
      - "9000"
      - "9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_SERVER_URL: $SERVICE_FQDN_MINIO
      MINIO_BROWSER_REDIRECT_URL: $SERVICE_FQDN_MINIO_CONSOLE
      MINIO_ROOT_USER: $SERVICE_USER_MINIO
      MINIO_ROOT_PASSWORD: $SERVICE_PASSWORD_MINIO
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 20s
      timeout: 10s
      retries: 3

  minio-setup:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - app_network
    restart: "no"
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set myminio http://minio:9000 $SERVICE_USER_MINIO $SERVICE_PASSWORD_MINIO;
      /usr/bin/mc mb myminio/${STORAGE_BUCKET:-default} --ignore-existing;
      /usr/bin/mc anonymous set download myminio/${STORAGE_BUCKET:-default};
      echo 'MinIO setup completed successfully';
      exit 0;
      "

  chrome:
    image: ghcr.io/browserless/chrome:latest
    platform: linux/amd64
    restart: unless-stopped
    expose:
      - "3000"
    environment:
      HEALTH: "true"
      TIMEOUT: 10000
      CONCURRENT: 10
      TOKEN: $SERVICE_PASSWORD_CHROMETOKEN
    networks:
      - app_network
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "-H",
          "Authorization: Bearer $SERVICE_PASSWORD_CHROMETOKEN",
          "http://localhost:3000/json/version",
        ]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 60s

  app:
    build: .
    restart: unless-stopped
    ports:
      - "${APP_PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio-setup:
        condition: service_completed_successfully
      chrome:
        condition: service_healthy
    networks:
      - app_network
    environment:
      SERVICE_FQDN_REACTIVERESUME_3000: ""
      PUBLIC_URL: $SERVICE_FQDN_REACTIVERESUME
      STORAGE_URL: ${SERVICE_FQDN_MINIO}/${STORAGE_BUCKET:-default}
      DATABASE_URL: postgresql://$SERVICE_USER_POSTGRES:$SERVICE_PASSWORD_POSTGRES@postgres:5432/${POSTGRES_DB:-postgres}
      ACCESS_TOKEN_SECRET: $SERVICE_PASSWORD_ACCESSTOKEN
      REFRESH_TOKEN_SECRET: $SERVICE_PASSWORD_REFRESHTOKEN
      SERVICE_JWT_SECRET: $SERVICE_PASSWORD_SERVICEJWT
      CHROME_TOKEN: $SERVICE_PASSWORD_CHROMETOKEN
      CHROME_URL: ws://chrome:3000/chrome
      REDIS_URL: redis://redis:6379
      STORAGE_ENDPOINT: minio
      STORAGE_PORT: 9000
      STORAGE_REGION: ${STORAGE_REGION:-us-east-1}
      STORAGE_BUCKET: ${STORAGE_BUCKET:-default}
      STORAGE_ACCESS_KEY: $SERVICE_USER_MINIO
      STORAGE_SECRET_KEY: $SERVICE_PASSWORD_MINIO
      STORAGE_USE_SSL: "false"
      STORAGE_SKIP_BUCKET_CHECK: "false"
      STORAGE_FORCE_PATH_STYLE: "true"
      DISABLE_SIGNUPS: ${SERVICE_DISABLE_SIGNUPS:-false}
      DISABLE_EMAIL_AUTH: ${SERVICE_DISABLE_EMAIL_AUTH:-false}
      ALLOWED_SERVICE_PROVIDERS: ${ALLOWED_SERVICE_PROVIDERS:-my-app,external-service}
      MAIL_FROM: ${MAIL_FROM:-noreply@smarcrib.site}

volumes:
  minio_data:
  postgres_data:
  redis_data:
